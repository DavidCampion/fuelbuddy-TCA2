{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport Welcome from \"./Screens/WelcomeScreen\";\nimport Home from \"./Screens/HomeScreen\";\nimport Map from \"./Screens/MapScreen\";\nimport Account from \"./Screens/AccountScreen\";\nimport Login from \"./Screens/LoginScreen\";\nimport Register from \"./Screens/RegisterScreen\";\nimport RegisterVerify from \"./Screens/RegisterVerifyScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar RegisterNavigator = function RegisterNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Register\",\n      component: Register\n    }), _jsx(Stack.Screen, {\n      name: \"RegisterVerify\",\n      component: RegisterVerify\n    })]\n  });\n};\nvar LoginNavigator = function LoginNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(Stack.Screen, {\n      name: \"RegisterVerify\",\n      component: RegisterVerify\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    state = _useAuth.state,\n    dispatch = _useAuth.dispatch;\n  return _jsx(NavigationContainer, {\n    children: state.isUserAuthenticated ? _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarActiveTintColor: 'blue',\n          tabBarInactiveTintColor: 'gray',\n          tabBarStyle: {\n            backgroundColor: 'lightgray'\n          },\n          tabBarLabelStyle: {\n            fontSize: 16\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Map') {\n              iconName = 'map';\n            } else if (route.name === 'Account') {\n              iconName = 'star';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"Map\",\n        component: Map\n      }), _jsx(Tab.Screen, {\n        name: \"Account\",\n        component: Account\n      })]\n    }) : _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: Welcome\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterNavigator\n      })]\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","Welcome","Home","Map","Account","Login","Register","RegisterVerify","jsx","_jsx","jsxs","_jsxs","Tab","Stack","RegisterNavigator","Navigator","children","Screen","name","component","LoginNavigator","AppNavigator","_useAuth","useAuth","state","dispatch","isUserAuthenticated","screenOptions","_ref","route","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","tabBarLabelStyle","fontSize","tabBarIcon","_ref2","color","size","iconName","headerShown"],"sources":["C:/Users/David/Documents/DKIT/Y4/fuelbuddy-FE/AppNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons'; // Import icons from Expo's vector-icons\r\n\r\nimport Welcome from './Screens/WelcomeScreen';\r\nimport Home from './Screens/HomeScreen';\r\nimport Map from './Screens/MapScreen';\r\nimport Account from './Screens/AccountScreen';\r\nimport Login from './Screens/LoginScreen';\r\nimport Register from './Screens/RegisterScreen';\r\nimport RegisterVerify from './Screens/RegisterVerifyScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst RegisterNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Register\" component={Register} />\r\n      <Stack.Screen name=\"RegisterVerify\" component={RegisterVerify} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst LoginNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Login\" component={Login} />\r\n      <Stack.Screen name=\"RegisterVerify\" component={RegisterVerify} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n\r\nconst AppNavigator = () => {\r\n\r\n  const { state, dispatch } = useAuth();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {state.isUserAuthenticated ? (\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarActiveTintColor: 'blue',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarStyle: {\r\n            backgroundColor: 'lightgray',\r\n          },\r\n          tabBarLabelStyle: {\r\n            fontSize: 16,\r\n          },\r\n          tabBarIcon: ({ color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n                iconName = 'home';\r\n            } else if (route.name === 'Map') {\r\n                iconName = 'map';\r\n            } else if (route.name === 'Account') {\r\n                iconName = 'star';\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} />; // Use Ionicons from Expo\r\n          },\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={Home} />\r\n        <Tab.Screen name=\"Map\" component={Map} />\r\n        <Tab.Screen name=\"Account\" component={Account} />\r\n      </Tab.Navigator>\r\n      ) : (\r\n        <Stack.Navigator screenOptions={{\r\n          headerShown: false\r\n        }}>\r\n          <Stack.Screen name=\"Welcome\" component={Welcome} />\r\n          <Stack.Screen name=\"Login\" component={LoginNavigator} />\r\n          <Stack.Screen name=\"Register\" component={RegisterNavigator} />\r\n        </Stack.Navigator>\r\n      )}\r\n    </NavigationContainer>\r\n    \r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport SettingsScreen from \"./Screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar AppNavigator = function AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarOptions: {\n        activeTintColor: 'blue',\n        inactiveTintColor: 'gray',\n        style: {\n          backgroundColor: 'lightgray'\n        },\n        labelStyle: {\n          fontSize: 16\n        }\n      },\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Settings') {\n              iconName = 'settings';\n            }\n            return _jsx(YourIconLibrary, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      })]\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","HomeScreen","SettingsScreen","jsx","_jsx","jsxs","_jsxs","Tab","AppNavigator","children","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","style","backgroundColor","labelStyle","fontSize","screenOptions","_ref","route","tabBarIcon","_ref2","color","size","iconName","name","YourIconLibrary","Screen","component"],"sources":["D:/Year 4/CollabProject/Leafit/Frontend/AppNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport HomeScreen from './Screens/HomeScreen';\r\nimport SettingsScreen from './Screens/SettingsScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AppNavigator = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        tabBarOptions={{\r\n          activeTintColor: 'blue',   // Color of the active tab\r\n          inactiveTintColor: 'gray', // Color of inactive tabs\r\n          style: {\r\n            backgroundColor: 'lightgray', // Background color of the tab bar\r\n          },\r\n          labelStyle: {\r\n            fontSize: 16,  // Font size of the tab labels\r\n          },\r\n        }}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = 'home';\r\n            } else if (route.name === 'Settings') {\r\n              iconName = 'settings';\r\n            }\r\n\r\n            // You can use a library like react-native-vector-icons for icons.\r\n            return (\r\n              // Replace 'YourIconLibrary' and 'iconName' with your chosen icon library and icon name.\r\n              <YourIconLibrary name={iconName} size={size} color={color} />\r\n            );\r\n          },\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n        <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAExE,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,GAAG,GAAGP,wBAAwB,CAAC,CAAC;AAEtC,IAAMQ,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,OACEJ,IAAA,CAACL,mBAAmB;IAAAU,QAAA,EAClBH,KAAA,CAACC,GAAG,CAACG,SAAS;MACZC,aAAa,EAAE;QACbC,eAAe,EAAE,MAAM;QACvBC,iBAAiB,EAAE,MAAM;QACzBC,KAAK,EAAE;UACLC,eAAe,EAAE;QACnB,CAAC;QACDC,UAAU,EAAE;UACVC,QAAQ,EAAE;QACZ;MACF,CAAE;MACFC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;YAAA,IAAlBC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YACxB,IAAIC,QAAQ;YAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;cACpCD,QAAQ,GAAG,UAAU;YACvB;YAGA,OAEErB,IAAA,CAACuB,eAAe;cAACD,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAEjE;QACF,CAAC;MAAA,CAAE;MAAAd,QAAA,GAEHL,IAAA,CAACG,GAAG,CAACqB,MAAM;QAACF,IAAI,EAAC,MAAM;QAACG,SAAS,EAAE5B;MAAW,CAAE,CAAC,EACjDG,IAAA,CAACG,GAAG,CAACqB,MAAM;QAACF,IAAI,EAAC,UAAU;QAACG,SAAS,EAAE3B;MAAe,CAAE,CAAC;IAAA,CAC5C;EAAC,CACG,CAAC;AAE1B,CAAC;AAED,eAAeM,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
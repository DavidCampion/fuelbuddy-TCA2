{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterVerifyScreen = function RegisterVerifyScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      username: '',\n      code: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var handleChange = function handleChange(name, value) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, name, value)));\n  };\n  var handleVerify = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://127.0.0.1:5000/register/verify', formData);\n        setMessage(response.data.message);\n        if (response.data.message === 'Verification successful!') {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        setMessage(error.response.data.error);\n      }\n    });\n    return function handleVerify() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Verification Screen\"\n    }), _jsx(TextInput, {\n      placeholder: \"Username\",\n      onChangeText: function onChangeText(text) {\n        return handleChange('username', text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Verification Code\",\n      onChangeText: function onChangeText(text) {\n        return handleChange('code', text);\n      }\n    }), _jsx(Button, {\n      title: \"Verify\",\n      onPress: handleVerify\n    }), _jsx(Text, {\n      children: message\n    })]\n  });\n};\nexport default RegisterVerifyScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","RegisterVerifyScreen","navigation","_useState","username","code","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","message","setMessage","handleChange","name","value","_objectSpread","_defineProperty","handleVerify","_ref","_asyncToGenerator","response","post","data","navigate","error","apply","arguments","children","placeholder","onChangeText","text","title","onPress"],"sources":["C:/Users/David/Documents/DKIT/Y4/fuelbuddy-FE/Screens/RegisterVerifyScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\nimport axios from 'axios';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst RegisterVerifyScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    code: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5000/register/verify', formData);\r\n      setMessage(response.data.message);\r\n\r\n      // If verification is successful, you can navigate to another screen (e.g., the home screen)\r\n      if (response.data.message === 'Verification successful!') {\r\n        navigation.navigate('Home'); // Change 'Home' to the screen you want to navigate to\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Verification Screen</Text>\r\n      <TextInput\r\n        placeholder=\"Username\"\r\n        onChangeText={(text) => handleChange('username', text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Verification Code\"\r\n        onChangeText={(text) => handleChange('code', text)}\r\n      />\r\n      <Button title=\"Verify\" onPress={handleVerify} />\r\n      <Text>{message}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RegisterVerifyScreen;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAAO,SAAA,GAAgCb,QAAQ,CAAC;MACvCc,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAHKK,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAK5B,IAAAI,UAAA,GAA8BpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAEC,KAAK,EAAK;IACpCP,WAAW,CAAAQ,aAAA,CAAAA,aAAA,KAAMT,QAAQ,OAAAU,eAAA,KAAGH,IAAI,EAAGC,KAAK,EAAE,CAAC;EAC7C,CAAC;EAED,IAAMG,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACF,IAAMC,QAAQ,SAAS3B,KAAK,CAAC4B,IAAI,CAAC,uCAAuC,EAAEf,QAAQ,CAAC;QACpFK,UAAU,CAACS,QAAQ,CAACE,IAAI,CAACZ,OAAO,CAAC;QAGjC,IAAIU,QAAQ,CAACE,IAAI,CAACZ,OAAO,KAAK,0BAA0B,EAAE;UACxDV,UAAU,CAACuB,QAAQ,CAAC,MAAM,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdb,UAAU,CAACa,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC;MACvC;IACF,CAAC;IAAA,gBAZKP,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYjB;EAED,OACE5B,KAAA,CAACT,IAAI;IAAAsC,QAAA,GACH/B,IAAA,CAACN,IAAI;MAAAqC,QAAA,EAAC;IAAmB,CAAM,CAAC,EAChC/B,IAAA,CAACL,SAAS;MACRqC,WAAW,EAAC,UAAU;MACtBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKlB,YAAY,CAAC,UAAU,EAAEkB,IAAI,CAAC;MAAA;IAAC,CACxD,CAAC,EACFlC,IAAA,CAACL,SAAS;MACRqC,WAAW,EAAC,mBAAmB;MAC/BC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKlB,YAAY,CAAC,MAAM,EAAEkB,IAAI,CAAC;MAAA;IAAC,CACpD,CAAC,EACFlC,IAAA,CAACJ,MAAM;MAACuC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEf;IAAa,CAAE,CAAC,EAChDrB,IAAA,CAACN,IAAI;MAAAqC,QAAA,EAAEjB;IAAO,CAAO,CAAC;EAAA,CAClB,CAAC;AAEX,CAAC;AAED,eAAeX,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}